# Environment variables used in zsh and bash. For any common setup, including 
# aliases, use .common_aliases, which is called by .zshrc and .bashrc, which set up 
# the interactive shell.
#
# This file is sourced by ~/.profile and ~/.zprofile, which set up on the 
# non-interactive shell. 
#
# For ideas, see https://github.com/mattmc3/zdotdir/blob/main/conf.d/aliases.zsh

# see https://unix.stackexchange.com/questions/38172/are-all-bash-scripts-compatible-with-zsh
# comment out since the emulate is inherited by other functions which won't work if 
# they're not designed for sh
# if [ -n "$ZSH_VERSION" ]; then emulate -L sh; fi

# echo "Running ~/.common_environment"

# LOG_FILE="/tmp/log/zsh_startup.log"
# echo "$(date '+%Y-%m-%d %H:%M:%S') - .common_environment start executed" >> "$LOG_FILE"

# add $! to PATH if not already in PATH
add_to_path() {
  local dir_to_add="$1"
  local add_to_beginning="$2"
  
  # Check if the directory is already in PATH
  case ":$PATH:" in
    *":$dir_to_add:"*)
      # echo "$dir_to_add is already in PATH"
      ;;
    *)
      # echo "Adding $dir_to_add to PATH"
      if [ "$add_to_beginning" = true ]; then
        PATH="$dir_to_add:$PATH"
      else
        PATH="$PATH:$dir_to_add"
      fi
      ;;
  esac

  # Export PATH so it's available in the current session
  export PATH
}

# make sure /etc/profile is sourced
if [ -f /etc/profile ]; then
  . /etc/profile
fi

export XDG_CONFIG_HOME=~/.config

# set DATA if not set; this should be set in /etc/environment but set it 
# here if for some reason (eg on a new PC), it's not set yet
export DATA=${DATA:-"$HOME/data"}
export D=${D:-"$HOME/data"}

# zsh env variables
if [[ $SHELL == *"zsh"* ]]; then
  export ZDOTDIR="$XDG_CONFIG_HOME/zsh"

# for run-help (key C^X-H)
  export HELPDIR=/usr/share/zsh/help
  export HISTORY_IGNORE="d|ev|al|da|dl|dla|ls|[bf]g|exit|reset|clear|env|u|uu|uuu|cd|cd ..|cd..|..|...|....|*veracrypt*"
fi

# History Options
# ###############

# Don't put duplicate lines in the history.
export HISTCONTROL="ignoredups"
export HISTFILE=~/.histfile
export HISTSIZE=25000
export SAVEHIST=9000
export DIRSTACKSIZE=40

export RIPGREP_CONFIG_PATH=$XDG_CONFIG_HOME/.ripgreprc

# Ignore some controlling instructions
# bash only
export HISTIGNORE="[   ]*:d:dl:dla:ls:..:...:....:exec zsh:&:bg:fg:exit:d:da:ls:[bf]g:reset:history:clear:cd:cd ..:cd..:u:uu:uuu"

# Whenever displaying the prompt, write the previous line to disk
# export PROMPT_COMMAND="history -a"
#
# will display only the current directory as the title - used for tabs in kitty
# PROMPT_COMMAND='echo -ne "\033]0;$(basename ${PWD})\007"'
# To see the last two directories inside the path

# put these in /etc/environment
# export EDITOR="gvim --remote"
# export EDITOR="gvim2"
# export VISUAL=$EDITOR
# export PAGER="less"

# https://www.zintis.net/LSCOLORS.html
# https://thelinuxcode.com/ls_colors_bash/
# The format for 256-color codes
# <attributes>;<foreground>;<background>
# attributes:
#   0 = none
#   1 = bold
#   4 = underline
#
# In LS_COLORS, you use ANSI escape codes like:
#   Purpose         	Example	Meaning
#   Foreground color	38;5;N	Set text to color number N
#   Background color	48;5;N	Set background to color number N
# where N is a value between 0 and 255.
#
# For bold, use "1;38;5;N", underline use "4;38;5;N", etc
#
# To pick N, use the following code to generate a palette, call show256colors
#
#
# export LS_COLORS="di=38;5;32:ln=35:so=32:pi=33:ex=31:bd=1;36:cd=1;33:su=30;41:sg=30;46:tw=30;42:ow=30;43"

show256colors() {
  for i in {0..255}; do
    printf "\e[38;5;%sm%3s\e[0m " $i $i
    (( (i+1) % 16 == 0 )) && echo
  done
}

# convert hex colour (eg #123456) to ansi number to use in LS_COLORS
hex2ansi() {
  hex=${1#"#"}
  r=$((16#${hex:0:2}))
  g=$((16#${hex:2:2}))
  b=$((16#${hex:4:2}))

  to_ansi() {
    (( $1 < 48 )) && echo 0 && return
    (( $1 < 115 )) && echo 1 && return
    echo $(( ($1 - 35) / 40 ))
  }

  r=$(to_ansi $r)
  g=$(to_ansi $g)
  b=$(to_ansi $b)

  echo $((16 + 36*r + 6*g + b))
}

# this may be overridden by ~/.config/.dircolors in zshrc
export LS_COLORS="di=1;38;5;68:ln=38;5;181:so=38;5;139:pi=38;5;215:ex=38;5;174:bd=38;5;144:cd=38;5;144:su=38;5;174:sg=38;5;174:tw=38;5;110:ow=38;5;108:st=38;5;174:mi=38;5;124:or=38;5;174:*.tar=38;5;179:*.gz=38;5;179:*.zip=38;5;179:*.rar=38;5;179:*.7z=38;5;179:"

export INPUTRC="~/.inputrc"
export LESS="--no-init --ignore-case --quit-if-one-screen --force --RAW-CONTROL-CHARS"
# export FZF_DEFAULT_COMMAND="rg --files --hidden . 2> nul"
# export FZF_DEFAULT_COMMAND='rg --hidden -l ""'
export FZF_DEFAULT_COMMAND='fd --color=always --type f --hidden'
export FZF_CTRL_T_COMMAND='fd --color=always --hidden'
export FZF_ALT_C_COMMAND='fd --color=always --type d --hidden'

# put these in /etc/environment
# export DATA='/home/praful/data'
# export D='/home/praful/data'

export FZF_CTRL_T_OPTS="--ansi \
  --ansi \
  --preview 'if [ -d {} ]; then eza -lh --color=always {}; else bat --style=numbers --color=always --line-range :300 {}; fi' \
  --bind 'ctrl-/:change-preview-window(down|right|hidden)' \
  --bind 'alt-p:page-up' \
  --bind 'alt-n:page-down' \
  --bind 'alt-k:preview-up' \
  --bind 'alt-j:preview-down' \
  --header 'Press ctrl-/ to cycle preview modes'"

# coloured man pages using bat
export MANPAGER="sh -c 'col -bx | bat -l man -p'"
export MANROFFOPT="-c"

# key ? to toggle small preview window to see the full command
# key # to copy the command into clipboard using xsel
# this is not used is atuin is installed
export FZF_CTRL_R_OPTS="--preview 'echo {}' --preview-window up:3:hidden:wrap --bind '?:toggle-preview' --bind '#:execute-silent(echo -n {2..} | xsel --input)+abort' --color header:italic --header 'Press ? to see long command; # to copy command into clipboard'"

# Print tree structure in the preview window
# export FZF_ALT_C_OPTS="--ansi --preview 'tree -C {}'"
export FZF_ALT_C_OPTS="--ansi --preview 'eza -T --color=always {}'"

# for data dir (on another drive)that is mounted at ~/data, if we are in ~/data,
# gitls won't look across file systems since ~/data is on one drive and ~/ is on 
# another drive. This fixes issue:
export GIT_DISCOVERY_ACROSS_FILESYSTEM=1
# uncomment for diagnostic output
# export GIT_TRACE=1

if [ -f $HOME/.init_pyenv ]; then
  source $HOME/.init_pyenv
else
    echo "No $HOME/.init_pyenv found."
fi

export NVM_DIR="$XDG_CONFIG_HOME/nvm"

if [ -n "$WAYLAND_DISPLAY" ]; then
  export MOZ_ENABLE_WAYLAND=1
  export GVIM_ENABLE_WAYLAND=1
fi

# These are commented out because they slowdown startup and we don't use nvm that much. They
# also update PATH to include the node location and define the nvm command (which is 
# not a script). The PATH is updated manually below.
# If you want to run nvm, uncomment them.
# [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
# [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# export NNN_FIFO=$TMPDIR/nnn.fifo
# ;c copies current filename to clipboard
# ;p copies full path of current filename to clipboard
# export NNN_PLUG='c:! echo $nnn|xclip*;p:! realpath $nnn|xclip*;f:finder;o:fzopen;d:diffs;t:nmount;v:preview-tui'
# set tab colours: see https://github.com/jarun/nnn/wiki/Usage#configuration
# export NNN_COLORS='#e2777be1'

# export GPODDER_HOME=$XDG_CONFIG_HOME/gpodder
# export GPODDER_DOWNLOAD_DIR=$DATA/podcasts 

# export PATH=$NVM_DIR/versions/node/v21.5.0/bin:$PATH:~/data/scripts/linux
add_to_path "$NVM_DIR/versions/node/v21.5.0/bin" true
add_to_path "$HOME/data/scripts/linux" false
add_to_path "$HOME/.cargo/bin" false

# Disable flow control Ctrl-q and Ctrl-s.
# The -t check is to ensure we're running in a terminal otherwise we'll get
# an error eg when logging on.
if [ -t 0 ]; then
    stty -ixon
fi

# echo "$(date '+%Y-%m-%d %H:%M:%S') - .common_environment end executed" >> "$LOG_FILE"
